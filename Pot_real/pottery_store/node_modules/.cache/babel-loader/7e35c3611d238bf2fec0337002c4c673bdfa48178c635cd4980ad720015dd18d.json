{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thomas\\\\Documents\\\\GitHub\\\\Sweattowel.github.io\\\\Pot_real\\\\pottery_store\\\\src\\\\C U B E\\\\CUBE.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const sceneRef = useRef();\n  useEffect(() => {\n    // Set up your Three.js scene here\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    sceneRef.current.appendChild(renderer.domElement);\n\n    // Create a cube for example\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 5;\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Rotate the cube\n      cube.rotation.x += 0;\n      cube.rotation.y += 0;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Clean up on component unmount\n    return () => {\n      // Dispose Three.js objects, clean up resources, etc.\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sceneRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeScene, \"JWNkVvqDwC3Xj+XwVC/OSsWa/OI=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","ThreeScene","_s","sceneRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","current","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","dispose","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Thomas/Documents/GitHub/Sweattowel.github.io/Pot_real/pottery_store/src/C U B E/CUBE.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst ThreeScene = () => {\r\n  const sceneRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Set up your Three.js scene here\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    sceneRef.current.appendChild(renderer.domElement);\r\n\r\n    // Create a cube for example\r\n    const geometry = new THREE.BoxGeometry();\r\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    scene.add(cube);\r\n\r\n    camera.position.z = 5;\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n\r\n      // Rotate the cube\r\n      cube.rotation.x += 0;\r\n      cube.rotation.y += 0;\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Clean up on component unmount\r\n    return () => {\r\n      // Dispose Three.js objects, clean up resources, etc.\r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={sceneRef} />;\r\n};\r\n\r\nexport default ThreeScene;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,MAAM,CAAC,CAAC;EAEzBC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,KAAK,GAAG,IAAIN,KAAK,CAACO,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIR,KAAK,CAACS,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAIb,KAAK,CAACc,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDP,QAAQ,CAACW,OAAO,CAACC,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;;IAEjD;IACA,MAAMC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,WAAW,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAG,IAAIrB,KAAK,CAACsB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,MAAMC,IAAI,GAAG,IAAIxB,KAAK,CAACyB,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;IAC/Cf,KAAK,CAACoB,GAAG,CAACF,IAAI,CAAC;IAEfhB,MAAM,CAACmB,QAAQ,CAACC,CAAC,GAAG,CAAC;;IAErB;IACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;;MAE9B;MACAL,IAAI,CAACO,QAAQ,CAACC,CAAC,IAAI,CAAC;MACpBR,IAAI,CAACO,QAAQ,CAACE,CAAC,IAAI,CAAC;MAEpBpB,QAAQ,CAACqB,MAAM,CAAC5B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAEDqB,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACX;MACAhB,QAAQ,CAACsB,OAAO,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOjC,OAAA;IAAKkC,GAAG,EAAE/B;EAAS;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/B,CAAC;AAACpC,EAAA,CAxCID,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}